#include <stdio.h>

#define ARR_SIZE 12
#define STRING_SIZE 12
#define DECADE 10
#define LUNH_ALGORITHM_MODULO 10
#define LUNH_CORRECTION_DIVISOR 10
#define HYPHEN 6
#define FEBRUARY_LEAP 29
#define TRUE 1
#define FALSE 0




int main(){


char string [STRING_SIZE];
char check;
int sum;
int control_digit;
int year;
int leap = FALSE;
int month;
int arr[ARR_SIZE] = {31,28,31,30,31,30,31,31,30,31,30,31};
int day;
int korrekt = TRUE;

printf("Skriv personnummer YYMMDD-NNNN \n");
fgets(string,sizeof(string),stdin);             // get input from user


    check = string[10];          //save the last digit for checking control digit



for(int i = 0; i <= ARR_SIZE -2; i++)
{
    

    if (string[i] < '0' && i != HYPHEN|| string[i] > '9' && i != HYPHEN || i == HYPHEN && string[i] != '-')
    {
        printf("Inte korrekt format\n");            //checking if the input format is correct or not
        korrekt = 0;
        break;
    }


    if(i == 1){

        year = (string[0] -'0')*DECADE + (string[1] -'0');          //sets a variabel to the year and checks for leap year

        if (year > 24)
        {
            year += 1900; 
                                                    // only checks 1924-2024 because only two digits in input
        }
        else{
            year += 2000;
            
        }

        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0)
        {
            leap = 1;
        }
    }

    else if(i == 3){

    month = (string[2] -'0' ) *DECADE + (string[3] -'0');           //check month so that it is an actuall month

        if ( month < 1 || month > 12)
        {
        printf("month wrong\n");
        korrekt = 0;
        break;
                
        }
    }
    else if(i == 5){

    day = (string[4] -'0') *DECADE + (string[5] -'0');          // check days so it matches the days in a month and leap day

        if (leap == TRUE)
        {
            arr[1] = FEBRUARY_LEAP;
        }
        

        if ( day < 1 || day > arr[month -1])
        {
        printf("day wrong\n");
        korrekt = FALSE;
        break;
                
        }
    }

    

}



for(int i = 0; i < STRING_SIZE-1; i++)
{

if (i % 2 == 0 && i < HYPHEN || i > HYPHEN && (i -1)% 2 == 0)       // starting luhn alghrithm
    {
        string[i] = (string[i] -'0') * 2;
    }
    else if (i != HYPHEN){
        string[i] = (string[i] -'0') * 1;
    }

}



for (int i = 0; i < STRING_SIZE -2; i++)              // sum numbers over 9 according to luhn 
{
    if(string[i] > 9 & i != HYPHEN)
    {
        string[i] = (string[i] -10) +1;
        sum += string[i];
    }
    else if (i != HYPHEN){
        sum += string[i];
    }
}

 control_digit = (LUNH_ALGORITHM_MODULO - (sum % LUNH_CORRECTION_DIVISOR)) % LUNH_CORRECTION_DIVISOR;          // calculate the control digit


if (control_digit == (check) -'0' && korrekt == TRUE)               // check the control digit if it matches the input
{
    printf("Ditt personnummer är korrekt\n");
}
else{
    printf("Ditt personnummer är inte korrekt\n"); 
}

return 0;

}
